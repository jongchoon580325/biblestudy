import React, { useState } from 'react';
import { 
  Database, 
  FileText, 
  CheckCircle, 
  Upload, 
  BarChart3,
  ChevronRight,
  Settings,
  User
} from 'lucide-react';

const ModernSidebar = () => {
  const [activeItem, setActiveItem] = useState('전체자료실');
  const [hoveredItem, setHoveredItem] = useState(null);

  const menuItems = [
    { id: '전체자료실', label: '전체자료실', icon: Database, color: 'text-blue-400' },
    { id: '성경자료실', label: '성경자료실', icon: FileText, color: 'text-yellow-400' },
    { id: '일반자료실', label: '일반자료실', icon: CheckCircle, color: 'text-green-400' },
    { id: '자료업로드', label: '자료업로드', icon: Upload, color: 'text-cyan-400' },
    { id: '데이터관리', label: '데이터관리', icon: BarChart3, color: 'text-pink-400' },
  ];

  return (
    <div className="h-screen w-80 bg-gradient-to-b from-gray-900 via-gray-800 to-gray-900 border-r border-gray-700/50 flex flex-col relative overflow-hidden">
      {/* Background Pattern */}
      <div className="absolute inset-0 opacity-5">
        <div className="absolute top-0 left-0 w-full h-full bg-gradient-to-br from-blue-500/10 to-purple-600/10"></div>
        <div className="absolute top-20 left-10 w-32 h-32 bg-blue-500/5 rounded-full blur-3xl"></div>
        <div className="absolute bottom-40 right-10 w-24 h-24 bg-purple-500/5 rounded-full blur-2xl"></div>
      </div>

      {/* Header */}
      <div className="relative z-10 p-6 border-b border-gray-700/30">
        <div className="flex items-center gap-3 mb-2">
          <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center shadow-lg">
            <Database className="w-5 h-5 text-white" />
          </div>
          <div>
            <h1 className="text-xl font-bold bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">
              성경 자료 관리 시스템
            </h1>
          </div>
        </div>
      </div>

      {/* Menu Items */}
      <div className="relative z-10 flex-1 px-4 py-6">
        <nav className="space-y-2">
          {menuItems.map((item) => {
            const Icon = item.icon;
            const isActive = activeItem === item.id;
            const isHovered = hoveredItem === item.id;
            
            return (
              <button
                key={item.id}
                onClick={() => setActiveItem(item.id)}
                onMouseEnter={() => setHoveredItem(item.id)}
                onMouseLeave={() => setHoveredItem(null)}
                className={`
                  w-full flex items-center gap-4 px-4 py-3.5 rounded-xl transition-all duration-300 ease-out group relative overflow-hidden
                  ${isActive 
                    ? 'bg-gradient-to-r from-white/10 to-white/5 border border-white/20 shadow-lg shadow-black/20 transform scale-[1.02]' 
                    : 'hover:bg-white/5 hover:border hover:border-white/10 hover:transform hover:scale-[1.01]'
                  }
                `}
              >
                {/* Active indicator */}
                {isActive && (
                  <div className="absolute left-0 top-0 bottom-0 w-1 bg-gradient-to-b from-blue-400 to-purple-500 rounded-r-full"></div>
                )}
                
                {/* Hover glow effect */}
                {(isActive || isHovered) && (
                  <div className="absolute inset-0 bg-gradient-to-r from-blue-500/5 to-purple-500/5 rounded-xl"></div>
                )}
                
                <div className={`
                  p-2 rounded-lg transition-all duration-300 relative z-10
                  ${isActive ? 'bg-white/10 shadow-lg' : 'bg-white/5 group-hover:bg-white/10'}
                `}>
                  <Icon className={`w-5 h-5 ${item.color} transition-all duration-300 ${isActive ? 'scale-110' : ''}`} />
                </div>
                
                <span className={`
                  font-medium transition-all duration-300 relative z-10
                  ${isActive 
                    ? 'text-white font-semibold' 
                    : 'text-gray-300 group-hover:text-white'
                  }
                `}>
                  {item.label}
                </span>
                
                {isActive && (
                  <ChevronRight className="w-4 h-4 text-white/60 ml-auto transform transition-transform duration-300" />
                )}
              </button>
            );
          })}
        </nav>
      </div>

      {/* Bible Verse Section */}
      <div className="relative z-10 p-6 mt-auto">
        <div className="bg-gradient-to-r from-yellow-500/10 to-orange-500/10 border border-yellow-500/20 rounded-2xl p-6 backdrop-blur-sm">
          <div className="text-center space-y-3">
            <div className="w-8 h-8 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full mx-auto flex items-center justify-center mb-4">
              <span className="text-white text-sm font-bold">✨</span>
            </div>
            <p className="text-yellow-200/90 text-sm leading-relaxed font-medium">
              지혜로운 사람은 듣고<br />
              그 배움을 더할 것이며<br />
              슬기로운 사람은 다음<br />
              슬기를 얻을 것이다
            </p>
            <p className="text-yellow-400/80 text-xs font-semibold tracking-wide">
              (잠언 1:5)
            </p>
          </div>
        </div>
      </div>

      {/* Footer */}
      <div className="relative z-10 p-4 border-t border-gray-700/30">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-3">
            <div className="w-8 h-8 bg-gradient-to-br from-gray-600 to-gray-700 rounded-full flex items-center justify-center">
              <User className="w-4 h-4 text-gray-300" />
            </div>
            <span className="text-gray-400 text-sm font-medium">Edit by 나 종 순</span>
          </div>
          <button className="p-2 hover:bg-white/5 rounded-lg transition-colors duration-200">
            <Settings className="w-4 h-4 text-gray-500 hover:text-gray-300" />
          </button>
        </div>
      </div>
    </div>
  );
};

